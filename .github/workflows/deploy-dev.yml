name: Deploy to Dev Environment

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
   #   - '.github/workflows/**'  # Avoid triggering on workflow file changes

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grant write access for contents (includes commit comments)

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          shared-key: rust-build
          cache-targets: true
          workspaces: |
            . -> target/wasm32-unknown-unknown
            . -> target/dx
          cache-on-failure: true
  
      - name: Install cargo-binstall
        run: cargo install cargo-binstall
  
      - name: Install dioxus-cli
        run: |
          echo "Checking for dx binary..."
          ls -la $HOME/.cargo/bin
          if ! command -v dx &> /dev/null; then
            echo "dx not found, installing dioxus-cli@0.6.3..."
            cargo binstall dioxus-cli@0.6.3 --no-confirm --force
          else
            echo "dx found, verifying version..."
            dx --version
          fi

      - name: Add Cargo bin to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache dioxus-cli
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/dx
          key: ${{ runner.os }}-dioxus-cli-v0.6.3
          restore-keys: |
            ${{ runner.os }}-dioxus-cli-

      - name: Build Dioxus app
        run: dx build --release


      - name: Get short SHA
        id: slug
        run: echo "sha=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy target/dx/djibon/release/web/public --project-name=djibon-dev

      - name: Comment on commit
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `âœ… Dev deployment successful!\n\nPreview: https://dev.djibon.com\nCommit: ${context.sha.substring(0, 7)}`
            })

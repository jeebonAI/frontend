name: Build Android App and Deploy

on:
  workflow_dispatch:  # Allow manual triggering
    inputs:
      version:
        description: 'Version number (x.x.x)'
        required: true
        default: '0.0.1'
  push:
    tags:
      - 'v*android*'  # Trigger on any tag containing 'android'

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Extract version from tag or input
        id: get-version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Extract version from tag (e.g., v0.0.3-android-web -> 0.0.3)
            TAG=${GITHUB_REF#refs/tags/}
            VERSION=$(echo $TAG | sed -E 's/^v([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          else
            # Use the version from workflow_dispatch input
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

  update-version:
    needs: extract-version
    uses: ./.github/workflows/update-version.yml
    with:
      version: ${{ needs.extract-version.outputs.version }}

  build-android:
    needs: update-version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download version files
        uses: actions/download-artifact@v3
        with:
          name: version-files
          path: ./

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: armv7-linux-androideabi, aarch64-linux-android

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli@0.6.0 --locked

      - name: Build Android App
        run: dx build --platform android --release

      - name: Find and prepare APK
        run: |
          APK_PATH=$(find target/dx/djibon/release/android -name "*.apk" | grep -v "intermediates" | head -1)

          if [ -z "$APK_PATH" ]; then
            echo "APK not found"
            exit 1
          fi

          # Copy to download-page
          mkdir -p download-page
          cp "$APK_PATH" download-page/djibon-app.apk

      - name: Upload Android build artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: download-page/djibon-app.apk
          retention-days: 30

      # GitHub Release will be created by the release-and-deploy.yml workflow

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          workingDirectory: 'download-page'
          command: pages deploy . --project-name=djibon-download
